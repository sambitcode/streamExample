import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.OptionalInt;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ArrayList<String> fruit = new ArrayList<>();
		fruit.add("AppleA");
		fruit.add("mango");
		fruit.add("pineapple");
		fruit.add("kiwi");
		fruit.add("");
		fruit.add("kiwi");
		fruit.add("ki");
		System.out.println("List of fruit-" + fruit);

		// lets use map() to convert list of fruit
		List list = fruit.stream().map(e -> e.length()).collect(Collectors.toList());
		System.out.println("List generated by map-" + list);
		System.out.println(fruit.stream().filter(e -> e.length()>5).count());
		System.out.println(fruit.stream().map(e -> e.length()>5).count());
		System.out.println("map" +fruit.stream().map(e -> e.length()>5).collect(Collectors.toList()));
		System.out.println(fruit.stream().filter(x -> x.length()> 5).collect(Collectors.toList()));
		
		List<String> filtered = fruit.stream().filter(x -> !x.isEmpty()).filter(x -> x.length()> 2).filter(e -> e.charAt(0)== e.charAt(e.length()-1)).map(e -> e + "sambit").collect(Collectors.toList());

		System.out.println("filter "+ filtered);
		List<String> filtered2 = fruit.stream().filter(x -> x.length()> 2).collect(Collectors.toList());
		

		System.out.println("filter2 "+ filtered2);
		
		List unique = fruit.stream().filter(x -> !x.isEmpty()).distinct().collect(Collectors.toList());
		System.out.println("unique "+ unique);
		
		
		
		List<List<Integer>> number = new ArrayList<>();

		// adding the elements to number arraylist
		number.add(Arrays.asList(1, 2));
		number.add(Arrays.asList(3, 4));
		number.add(Arrays.asList(5, 6));
		number.add(Arrays.asList(7, 8));

		System.out.println("List of list-" + number);

		// using flatmap() to flatten this list
		List flatList = number.stream().flatMap(innerList -> innerList.stream()).collect(Collectors.toList());

		// printing the list
		System.out.println("List generate by flatMap-" + flatList);
		
		
		Stream.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
	    .filter(i -> i % 2 == 0)
	    .skip(2)
	    .forEach(i -> System.out.print(i + " "));
		
		System.out.println();
		
		Stream.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
	    .filter(i -> i % 2 == 0)
	    .limit(2)
	    .forEach(i -> System.out.print(i + " "));
		System.out.println();
		
		OptionalInt max = Stream.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10).mapToInt(e -> e).max();
		
		Stream.of(1, 8, 3, 11, 5, 14, 7, 8, 9, 10).sorted(Comparator.reverseOrder()).forEach(e -> System.out.println(e));
	}

}
